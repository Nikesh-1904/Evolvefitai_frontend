// src/components/AIModelBadge.js - Component to show which AI model generated the workout

import React from 'react';
import { Chip, Tooltip, Box } from '@mui/material';
import {
  AutoAwesome,
  Computer,
  Psychology,
  Settings,
  SmartToy
} from '@mui/icons-material';

const AIModelBadge = ({ aiModel, aiGenerated, size = 'small' }) => {
  if (!aiGenerated || !aiModel) {
    return (
      <Chip
        icon={<Settings />}
        label="Rule-based"
        size={size}
        color="default"
        variant="outlined"
      />
    );
  }

  const getModelConfig = (model) => {
    const modelLower = model.toLowerCase();
    
    if (modelLower.includes('groq') || modelLower.includes('llama3')) {
      return {
        icon: <AutoAwesome />,
        label: 'Groq AI',
        color: 'primary',
        tooltip: 'Generated by Groq Llama3-8B - Ultra-fast AI inference'
      };
    } else if (modelLower.includes('ollama') || modelLower.includes('llama2')) {
      return {
        icon: <Computer />,
        label: 'Ollama AI',
        color: 'secondary',
        tooltip: 'Generated by local Ollama Llama2 - Privacy-focused AI'
      };
    } else if (modelLower.includes('huggingface') || modelLower.includes('dialogpt')) {
      return {
        icon: <SmartToy />,
        label: 'HuggingFace',
        color: 'info',
        tooltip: 'Generated by HuggingFace AI - Open-source intelligence'
      };
    } else if (modelLower.includes('openai') || modelLower.includes('gpt')) {
      return {
        icon: <Psychology />,
        label: 'OpenAI',
        color: 'success',
        tooltip: 'Generated by OpenAI GPT - Advanced language model'
      };
    } else {
      return {
        icon: <AutoAwesome />,
        label: 'AI Generated',
        color: 'primary',
        tooltip: `Generated by ${model}`
      };
    }
  };

  const config = getModelConfig(aiModel);

  return (
    <Tooltip title={config.tooltip} arrow>
      <Chip
        icon={config.icon}
        label={config.label}
        size={size}
        color={config.color}
        variant="filled"
        sx={{
          fontWeight: 'bold',
          '& .MuiChip-icon': {
            animation: 'pulse 2s infinite'
          },
          '@keyframes pulse': {
            '0%': { transform: 'scale(1)' },
            '50%': { transform: 'scale(1.1)' },
            '100%': { transform: 'scale(1)' }
          }
        }}
      />
    </Tooltip>
  );
};

export default AIModelBadge;